// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RedisPatterns.Infrastructure.Data;

#nullable disable

namespace RedisPatterns.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506104216_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RedisPatterns.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("Stock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mechanical Keyboard",
                            Price = 1200m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wireless Mouse",
                            Price = 500m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 3,
                            Name = "Monitor 27 inch",
                            Price = 3500m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 4,
                            Name = "Speaker",
                            Price = 750m,
                            Stock = 12
                        },
                        new
                        {
                            Id = 5,
                            Name = "Microphone",
                            Price = 300m,
                            Stock = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
